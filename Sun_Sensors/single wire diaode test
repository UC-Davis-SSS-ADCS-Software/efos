import board
import busio
import time as t
import math as m
i2c = busio.I2C(board.SCL, board.SDA)

import adafruit_ads1x15.ads1115 as ADS

from adafruit_ads1x15.analog_in import AnalogIn

def map(oldval, oldmin, oldmax, newmin, newmax):
    return((((oldval - oldmin) * (newmax - newmin)) / (oldmax - oldmin)) + newmin)

ads = ADS.ADS1115(i2c)
volt_list=[]
deg_list=[]
pres = 10
i=0
while i!=500:
    
    
    
    chan0 = round(AnalogIn(ads, ADS.P0).voltage,pres)
    chan1 = 0#round(AnalogIn(ads, ADS.P1).voltage,p)
    chan2 = 0#round(AnalogIn(ads, ADS.P2).voltage,p)
    chan3 = 0#round(AnalogIn(ads, ADS.P3).voltage,p)
    
    mapped=map(chan0,2.4800756859,3.080093997,0,1)
    
    volt_list.append(chan0)
    
    #deg=m.degrees(m.acos(mapped))
    #deg_list.append(deg)
    
    
    #print(f"{chan0}\t{chan1}\t{chan2}\t{chan3}")
    print(f"{chan0}\t")
    
    
    
    t.sleep(.1)
    
    i+=1
        

with open("data6_raw_attempt2.txt","w") as external_file:
    print(volt_list,file=external_file)
    external_file.close()
    
#with open("data6_mapped.txt","w") as external_file:
#    print(deg_list,file=external_file)
 #   external_file.close()
